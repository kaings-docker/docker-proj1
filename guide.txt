// run tomcat:8.0 container & automatically remove the container when it exits (--rm)
docker run -it --rm -p 8888:8080 tomcat:8.0


// execute command inside the running container
// syntax: docker exec [container_id/container_name] [COMMAND]
docker exec [container_id/container_name] ps -eaf


// for persistent data, we have 2 ways to run container:
// 1) volume mounting
// example1
docker volume create data_volume                    // create volume mount under /var/lib/docker/volumes (/var/lib/docker/volumes/data_volume)
docker run -v data_volume:/var/lib/mysql mysql      // volume mount mysql data at /var/lib/mysql to host data_volume storage (for persistent storage)

// example2
// automatically create volume data_volume2 (location: /var/lib/docker/volumes/data_volume2) and
// mount it to mysql storage to create persistent storage
docker run -v data_volume2:/var/lib/mysql mysql


// 2) bind mounting
// bind mounting is the case when we want to create persistent storage in arbitrary location other than 
// location /var/lib/docker/volumes
docker run -v /data/mysql:/var/lib/mysql mysql


// new way of writing mounting (both volume & bind mount), by using `--mount` flag
docker run --mount type=bind,source=/data/mysql,target=/var/lib/mysql mysql


// to see how particular docker image is built (steps specified in Dockerfile)
docker history [image_ID]

// to show the actual disk usage of docker (compare: for linux disk usage info can be viewed using command `du`)
docker system df

// to see disk usage of docker with breakdown by image
docker system df -v

// to remove docker build cache
// ref: https://docs.docker.com/engine/reference/commandline/builder_prune/
docker builder prune

